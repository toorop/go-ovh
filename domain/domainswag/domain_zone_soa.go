// Code generated by go-swagger; DO NOT EDIT.

package domainswag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DomainZoneSoa Zone Start Of Authority
// swagger:model domain.Zone.Soa
type DomainZoneSoa struct {

	// Email address of the DNS Administrator
	Email string `json:"email,omitempty"`

	// When a zone transfer fails, a countdown clock begins. When the number of seconds set in the expire field elapses, the nameserver stops answering for that zone file
	Expire int64 `json:"expire,omitempty"`

	// Non-Existent Domain TTL, if the name server returns a negative response, the remote server should wait the number of seconds set in the nxDomainTtl field before trying again
	NxDomainTTL int64 `json:"nxDomainTtl,omitempty"`

	// The refresh value determines the interval in seconds between successful zone transfers of the entire zone file from a nameserver to another.
	Refresh int64 `json:"refresh,omitempty"`

	// The serial number is used to indicate which copy of the zone file is the most current. When editing zone files, you must increment the serial number
	Serial int64 `json:"serial,omitempty"`

	// Primary authoritative server
	Server string `json:"server,omitempty"`

	// Time To Live in seconds
	TTL int64 `json:"ttl,omitempty"`
}

// Validate validates this domain zone soa
func (m *DomainZoneSoa) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DomainZoneSoa) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainZoneSoa) UnmarshalBinary(b []byte) error {
	var res DomainZoneSoa
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
